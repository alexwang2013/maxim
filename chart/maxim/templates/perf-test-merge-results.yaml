apiVersion: batch/v1
kind: Job
metadata:
  name: perf-test-merge-results
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 1
  parallelism: 1
  completions: 1
  template:
    metadata:
      labels:
        name: perf-test-merge-results
    spec:
      serviceAccountName:  {{ .Values.serviceAccount }}
      initContainers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: poll-job-results
        command: ["/scripts/script.sh"]
        volumeMounts:
        - name: script
          mountPath: /scripts
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        name: perf-test-merge-results
        command: ["/bin/sh", "-c"]
        args: ["sh /scripts/start.sh"]
        volumeMounts:
        - name: script
          mountPath: /scripts
        - name: gatling-vol
          mountPath: /workdir/gatling/conf/gatling.conf
          subPath: gatling.conf
        resources:
          limits:
            cpu: 1000m
            memory: 2000Mi
          requests:
            cpu: 1000m
            memory: 2000Mi
      volumes:
        - name: script
          configMap:
            name: poll-script
            defaultMode: 0744
        - name: gatling-vol
          configMap:
            name: gatling-cm
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poll-script
  namespace: {{ .Release.Namespace }}
data:
  script.sh: |
    #!/bin/sh
    until [ $(kubectl get job perf-test  -n {{ .Release.Namespace }} -o=jsonpath='{.status.conditions[0].type}') = "Complete" ];
    do
      echo .
      sleep 10;
    done

  start.sh: |
    BUCKET_URL="{{ .Values.bucketUrl }}"
    SCENARIO_NAME="{{ .Values.scenarioName }}"
    mkdir -p $SCENARIO_NAME
    cd $SCENARIO_NAME
    aws s3 cp $BUCKET_URL/$SCENARIO_NAME ./ --recursive
    gatling -ro $(pwd)
    rm *.log
    cd ../
    tar -zcvf report.tar.gz ./$SCENARIO_NAME
    aws s3 cp report.tar.gz $BUCKET_URL/$SCENARIO_NAME/report.tar.gz